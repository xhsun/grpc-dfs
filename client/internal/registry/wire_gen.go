// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package registry

import (
	"github.com/google/wire"
	"github.com/xhsun/grpc-file-transfer/client/internal/cli"
	"github.com/xhsun/grpc-file-transfer/client/internal/client"
	"github.com/xhsun/grpc-file-transfer/client/internal/config"
	"github.com/xhsun/grpc-file-transfer/client/internal/file"
	"github.com/xhsun/grpc-file-transfer/client/internal/file/service"
	"github.com/xhsun/grpc-file-transfer/fileservice"
)

// Injectors from wire.go:

func InitializeCLI(config2 *config.Config) (*cli.CLI, error) {
	fileRepository := service.NewFileRepository(config2)
	fileServiceBuilder := fileservice.NewFileServiceBuilder(fileRepository)
	grpcClient := client.NewGRPCClient(config2)
	fileTransferRepository := service.NewFileTransferRepository(grpcClient)
	fileTransferServer := service.NewFileTransferServer(config2, fileServiceBuilder, fileTransferRepository)
	fileCommand := file.NewFileCommand(fileTransferServer)
	cliCLI := cli.NewCLI(config2, fileCommand)
	return cliCLI, nil
}

// wire.go:

var ServiceSet = wire.NewSet(service.NewFileRepository, wire.Bind(new(fileservice.IFileRepository), new(*service.FileRepository)), fileservice.NewFileServiceBuilder, wire.Bind(new(fileservice.IFileServiceBuilder), new(*fileservice.FileServiceBuilder)), service.NewFileTransferRepository, wire.Bind(new(service.IFileTransferRepository), new(*service.FileTransferRepository)), service.NewFileTransferServer, wire.Bind(new(service.IFileTransferService), new(*service.FileTransferServer)))
